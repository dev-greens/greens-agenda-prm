name: CI
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: greens_prm
          POSTGRES_USER: greens
          POSTGRES_PASSWORD: greens
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U greens"
          --health-interval=5s --health-timeout=5s --health-retries=30
      redis:
        image: redis:7
        ports: ["6379:6379"]
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s --health-timeout=5s --health-retries=30

    env:
      POSTGRES_DB: greens_prm
      POSTGRES_USER: greens
      POSTGRES_PASSWORD: greens
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432
      REDIS_URL: redis://127.0.0.1:6379/0

      DJANGO_SECRET_KEY: test
      DJANGO_DEBUG: 0
      DJANGO_ALLOWED_HOSTS: localhost
      DJANGO_PROJECT: greens_scheduler

      # üëâ Sem usar ${{ env.REDIS_URL }} aqui (para n√£o quebrar o parser)
      CELERY_BROKER_URL: redis://127.0.0.1:6379/0
      CELERY_RESULT_BACKEND: redis://127.0.0.1:6379/0

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Instalar depend√™ncias
        run: |
          python -m pip install -U pip setuptools wheel
          if [ -f requirements.txt ]; then pip install -r 
requirements.txt; fi
          pip install \
            "django~=4.2" \
            "celery~=5.3" "redis~=5.0" \
            "psycopg[binary]" \
            python-dotenv \
            djangorestframework \
            django-simple-history \
            sentry-sdk \
            phonenumbers "django-phonenumber-field[phonenumberslite]" \
            pandas openpyxl || true

      - name: Aguardar Postgres/Redis ficarem prontos
        shell: bash
        run: |
          for i in {1..30}; do
            pg_isready -h 127.0.0.1 -p 5432 -U greens >/dev/null 2>&1 && \
            redis-cli -h 127.0.0.1 -p 6379 ping | grep -q PONG && break
            echo "Aguardando servi√ßos... ($i/30)"; sleep 2
          done

      - name: Migrar e checar
        run: |
          python manage.py migrate --noinput
          python manage.py check

      - name: Healthcheck r√°pido
        run: |
          python manage.py shell -c "from django.conf import settings; \
            print('DB:', settings.DATABASES['default']['ENGINE']); \
            print('REDIS_URL:', settings.REDIS_URL); \
            print('Projeto:', settings.ROOT_URLCONF)"

